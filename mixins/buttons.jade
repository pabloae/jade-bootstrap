//-
    jade-bootstrap
    https://github.com/metalshark/jade-bootstrap

    Copyright (c) 2013 'Metalshark' Beech Horn
    Licensed under the LGPL v3 license.

//- http://getbootstrap.com/css/#buttons

//- Sets the button option, such as primary or warning
- function _btnOption(attributes) {
-     if (attributes.primary) {
-         _addClassAttribute('primary', 'btn-primary', attributes)
-     } else if (attributes.success) {
-         _addClassAttribute('success', 'btn-success', attributes)
-     } else if (attributes.info) {
-         _addClassAttribute('info', 'btn-info', attributes)
-     } else if (attributes.warning) {
-         _addClassAttribute('warning', 'btn-warning', attributes)
-     } else if (attributes.danger) {
-         _addClassAttribute('danger', 'btn-danger', attributes)
-     } else if (attributes.link) {
-         _addClassAttribute('link', 'btn-link', attributes)
-     } else {
-         attributes.default = true
-         _addClassAttribute('default', 'btn-default', attributes)
-     }
//- Sanity check
-     if (attributes.default || attributes.primary || attributes.success || attributes.info || attributes.warning || attributes.danger || attributes.link) {
-         throw new Error('You can only choose one button option at a time.')
-     }
- }

//- Sets the button size, such as lg or sm
- function _btnSize(attributes) {
-     if (attributes.lg) {
-         _addClassAttribute('lg', 'btn-lg', attributes)
-     } else if (attributes.sm) {
-         _addClassAttribute('sm', 'btn-sm', attributes)
-     } else if (attributes.xs) {
-         _addClassAttribute('xs', 'btn-xs', attributes)
-     }
//- Sanity check
-     if (attributes.lg || attributes.sm || attributes.xs) {
-         throw new Error('You can only choose one button size at a time.')
-     }
- }

//- Sets all button attributes, whilst performing sanity checks
- function _btnMeta(attributes) {
-     _addClassAttribute('active', 'active', attributes)
-     _addClassAttribute('block', 'btn-block', attributes)
-     _btnOption(attributes)
-     _btnSize(attributes)
- }

mixin buttons
    - _addClassAttribute('right', 'pull-right', attributes)
    - _addClassAttribute('left', 'pull-left', attributes)
    .btn-group&attributes(attributes)
        block

mixin button
    - attributes.type = attributes.type || 'button'
    button&attributes(attributes)
        block

mixin abtn
    - _btnMeta(attributes)
    - _addClassAttribute('disabled', 'disabled', attributes)
    - attributes.href = attributes.href || '#'
    - attributes.role = attributes.role || 'button'
    a.btn&attributes(attributes)
        block

mixin btn
    - _btnMeta(attributes)
    - attributes.type = attributes.type || 'button'
    +button.btn&attributes(attributes)
        block

mixin ibtn
    - _btnMeta(attributes)
    - attributes.type = attributes.type || 'button'
    input.btn&attributes(attributes)
    
mixin btn-like(num)
  a(href="#" title="Like").btn.btn-default #{num}
    span.sr-only Like
    if num
      i.icon-like.icon-after
    else
      i.icon-like

mixin btn-liked(num)
  a(href="#" title="Unlike").btn.btn-default.active #{num}
    span.sr-only Unlike
    if num
      i.icon-like-filled.icon-after
    else
      i.icon-like-filled

mixin btn-dislike(num)
  a(href="#" title="Dislike").btn.btn-default #{num}
    span.sr-only Dislike
    if num
      i.icon-dislike.icon-after
    else
      i.icon-dislike

mixin btn-disliked(num)
  a(href="#" title="Remove Dislike").btn.btn-default.active #{num}
    span.sr-only Remove Dislike
    if num
      i.icon-dislike-filled.icon-after
    else
      i.icon-dislike-filled

mixin btn-heart(num)
  a(href="#" title="Like").btn.btn-default #{num}
    span.sr-only Like
    if num
      i.icon-heart.icon-after
    else
      i.icon-heart

mixin btn-hearted(num)
  a(href="#" title="Unlike").btn.btn-default.active #{num}
    span.sr-only Unlike
    if num
      i.icon-heart-filled.icon-after
    else
      i.icon-heart-filled

mixin btn-reply
  a(href="#", title="Reply").btn.btn-default
    span.sr-only Reply
    i.icon-reply

mixin btn-retweet
  a(href="#" title="Retweet").btn.btn-default
    span.sr-only Retweet
    i.icon-retweet

mixin btn-fav
  a(href="#" title="Favourite").btn.btn-default
    i.icon-star
    span.sr-only Favourite

mixin btn-faved
  a(href="#" title="Unfavourite").btn.btn-default
    i.icon-star-filled
    span.sr-only Unfavourite

mixin btn-comment(num)
  a(href="#" title="Comment").btn.btn-default #{num}
    span.sr-only Comment
    if num
      i.icon-comment.icon-after
    else
      i.icon-comment

mixin btn-pin
  a(href="#" title="Pin it").btn.btn-default Pin it

mixin btn-pinned
  a(href="#" title="Unpin it").btn.btn-default Unpin it

mixin btn-visit
  a(href="#" title="Visit Site" class!=attributes.class).btn.btn-default Visit Site

mixin btn-more(menu)
  if !menu
    -var menu = ["Report", "Share"]
  .btn-group.dropup
    a(href="#" data-toggle="dropdown").btn.btn-default.dropdown-toggle
      span.sr-only More
      i.icon-more
    ul(role="menu").dropdown-menu
      each text in menu
        li: a(href="#")= text

mixin btn-edit
  a(href="#" data-toggle="dropdown" title="Edit" class!=attributes.class).btn.btn-default
    span Edit
    i.icon-edit.icon-after
